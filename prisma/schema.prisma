// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  nim_nip  BigInt @unique
  password String
  role     Role   @relation(fields: [role_id], references: [id])
  role_id  String

  mahasiswa  Mahasiswa?
  dosen      Dosen?
  Admin      Admin?
  created_at DateTime   @default(now()) @db.Timestamptz()
  updated_at DateTime   @updatedAt @db.Timestamptz()
}

model Role {
  id         String   @id @default(uuid())
  nama_role  NamaRole @default(MAHASISWA)
  User       User[]
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()
}

enum NamaRole {
  ADMIN
  MAHASISWA
  DOSEN
}

model Mahasiswa {
  id                     String                   @id @default(uuid())
  nama                   String
  nim                    BigInt
  ttl                    String
  email                  String
  alamat                 String?
  no_hp                  String?
  jurusan_id             String
  jurusan                Jurusan                  @relation(fields: [jurusan_id], references: [id])
  imei                   BigInt                   @unique
  user                   User                     @relation(fields: [user_id], references: [id])
  user_id                String                   @unique
  AbsensiDaftarMahasiswa AbsensiDaftarMahasiswa[]
  created_at             DateTime                 @default(now()) @db.Timestamptz()
  updated_at             DateTime                 @updatedAt @db.Timestamptz()
}

model Jurusan {
  id           String      @id @default(uuid())
  nama_jurusan String
  created_at   DateTime    @default(now()) @db.Timestamptz()
  updated_at   DateTime    @updatedAt @db.Timestamptz()
  Mahasiswa    Mahasiswa[]
}

model Dosen {
  id              String            @id @default(uuid())
  nama            String
  nip             BigInt            @unique
  ttl             String
  email           String            @unique
  alamat          String?
  no_hp           String?
  user            User              @relation(fields: [user_id], references: [id])
  user_id         String            @unique
  DosenMatakuliah DosenMatakuliah[]
  Absensi         Absensi[]
  created_at      DateTime          @default(now()) @db.Timestamptz()
  updated_at      DateTime          @updatedAt @db.Timestamptz()
}

model Admin {
  id         String   @id @default(uuid())
  nama_admin String
  email      String   @unique
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String   @unique
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()
}

model Ruangan {
  id                String              @id @default(uuid())
  nama_ruangan      String
  RuanganMataKuliah RuanganMataKuliah[]
  created_at        DateTime            @default(now()) @db.Timestamptz()
  updated_at        DateTime            @updatedAt @db.Timestamptz()
}

model MataKuliah {
  id                 String               @id @default(uuid())
  kode_matakuliah    String               @unique
  nama_matakuliah    String
  sks                Int
  SemesterMataKuliah SemesterMataKuliah[]
  DosenMatakuliah    DosenMatakuliah[]
  RuanganMataKuliah  RuanganMataKuliah[]
  Absensi            Absensi[]
  created_at         DateTime             @default(now()) @db.Timestamptz()
  updated_at         DateTime             @updatedAt @db.Timestamptz()
}

model Semester {
  id                 String               @id @default(uuid())
  semester           String
  SemesterMataKuliah SemesterMataKuliah[]
  created_at         DateTime             @default(now()) @db.Timestamptz()
  updated_at         DateTime             @updatedAt @db.Timestamptz()
}

model SemesterMataKuliah {
  semester_id   String
  semester      Semester   @relation(fields: [semester_id], references: [id])
  matakuliah_id String
  matakuliah    MataKuliah @relation(fields: [matakuliah_id], references: [id])
  created_at    DateTime   @default(now()) @db.Timestamptz()
  updated_at    DateTime   @updatedAt @db.Timestamptz()

  @@id([semester_id, matakuliah_id])
}

model DosenMatakuliah {
  dosen_id      String
  dosen         Dosen      @relation(fields: [dosen_id], references: [id])
  matakuliah_id String
  matakuliah    MataKuliah @relation(fields: [matakuliah_id], references: [id])
  created_at    DateTime   @default(now()) @db.Timestamptz()
  updated_at    DateTime   @updatedAt @db.Timestamptz()

  @@id([dosen_id, matakuliah_id])
}

model RuanganMataKuliah {
  ruangan_id    String
  ruangan       Ruangan    @relation(fields: [ruangan_id], references: [id])
  matakuliah_id String
  matakuliah    MataKuliah @relation(fields: [matakuliah_id], references: [id])
  created_at    DateTime   @default(now()) @db.Timestamptz()
  updated_at    DateTime   @updatedAt @db.Timestamptz()

  @@id([ruangan_id, matakuliah_id])
}

model Absensi {
  id                     String                   @id @default(uuid())
  matakuliah_id          String
  matakuliah             MataKuliah               @relation(fields: [matakuliah_id], references: [id])
  dosen_id               String
  dosen                  Dosen                    @relation(fields: [dosen_id], references: [id])
  jam_masuk              DateTime                 @db.Timestamptz()
  batas_absensi          DateTime                 @db.Timestamptz()
  qr_code                String
  AbsensiDaftarMahasiswa AbsensiDaftarMahasiswa[]
  status_absensi_id      String
  statusAbsensi          StatusAbsensi            @relation(fields: [status_absensi_id], references: [id])
  created_at             DateTime                 @default(now()) @db.Timestamptz()
  updated_at             DateTime                 @updatedAt @db.Timestamptz()
}

model AbsensiDaftarMahasiswa {
  id                  String          @id @default(uuid())
  absensi_id          String
  absensi             Absensi         @relation(fields: [absensi_id], references: [id])
  mahasiswa_id        String
  mahasiswa           Mahasiswa       @relation(fields: [mahasiswa_id], references: [id])
  status_mahasiswa_id String
  status_mahasiswa    StatusMahasiswa @relation(fields: [status_mahasiswa_id], references: [id])

  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()
}

model StatusMahasiswa {
  id                     String                   @id @default(uuid())
  status                 namaStatusMahasiswa
  AbsensiDaftarMahasiswa AbsensiDaftarMahasiswa[]

  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()
}

enum namaStatusMahasiswa {
  HADIR
  HADIR_DILUAR_BATAS_WAKTU
  IZIN
  ALPHA
}

model StatusAbsensi {
  id     String            @id @default(uuid())
  status namaStatusAbsensi

  created_at DateTime  @default(now()) @db.Timestamptz()
  updated_at DateTime  @updatedAt @db.Timestamptz()
  Absensi    Absensi[]
}

enum namaStatusAbsensi {
  BUKA
  TUTUP
}
