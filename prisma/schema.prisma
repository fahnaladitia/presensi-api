// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Mahasiswa {
  id               String             @id @default(uuid())
  email            String             @unique
  nim              String             @unique
  nama             String
  ttl              DateTime           @default(now()) @db.Timestamptz()
  password         String             @default("password")
  alamat           String?
  no_hp            String?
  is_active        Boolean            @default(false)
  angkatan_id      String
  angkatan         Angkatan           @relation(fields: [angkatan_id], references: [id])
  jurusan_id       String
  jurusan          Jurusan            @relation(fields: [jurusan_id], references: [id])
  imei             String             @unique
  created_at       DateTime           @default(now()) @db.Timestamptz()
  updated_at       DateTime           @updatedAt @db.Timestamptz()
  AbsensiMahasiswa AbsensiMahasiswa[]
}

model Angkatan {
  id         String      @id @default(uuid())
  angkatan   Int         @unique
  created_at DateTime    @default(now()) @db.Timestamptz()
  updated_at DateTime    @updatedAt @db.Timestamptz()
  Mahasiswa  Mahasiswa[]
}

model Admin {
  id         String   @id @default(uuid())
  email      String   @unique
  password   String   @default("password")
  alamat     String?
  no_hp      String?
  is_active  Boolean  @default(true)
  created_at DateTime @default(now()) @db.Timestamptz()
  updated_at DateTime @updatedAt @db.Timestamptz()
}

model Dosen {
  id         String       @id @default(uuid())
  email      String       @unique
  password   String       @default("password")
  alamat     String?
  ttl        DateTime     @default(now()) @db.Timestamptz()
  no_hp      String?
  is_active  Boolean      @default(false)
  created_at DateTime     @default(now()) @db.Timestamptz()
  updated_at DateTime     @updatedAt @db.Timestamptz()
  MataKuliah MataKuliah[]
}

model Jurusan {
  id           String       @id @default(uuid())
  nama_jurusan String       @unique
  created_at   DateTime     @default(now()) @db.Timestamptz()
  updated_at   DateTime     @updatedAt @db.Timestamptz()
  Mahasiswa    Mahasiswa[]
  MataKuliah   MataKuliah[]
}

model Ruangan {
  id           String        @id @default(uuid())
  nama_ruangan String        @unique
  created_at   DateTime      @default(now()) @db.Timestamptz()
  updated_at   DateTime      @updatedAt @db.Timestamptz()
  KelasJadwal  KelasJadwal[]
}

model Kelas {
  id          String        @id @default(uuid())
  nama_kelas  String        @unique
  created_at  DateTime      @default(now()) @db.Timestamptz()
  updated_at  DateTime      @updatedAt @db.Timestamptz()
  KelasJadwal KelasJadwal[]
}

model Semester {
  id         String       @id @default(uuid())
  semester   String       @unique
  created_at DateTime     @default(now()) @db.Timestamptz()
  updated_at DateTime     @updatedAt @db.Timestamptz()
  MataKuliah MataKuliah[]
}

model MataKuliahKelasJadwal {
  id              String      @id @default(uuid())
  kelas_jadwal_id String
  kelas_jadwal    KelasJadwal @relation(fields: [kelas_jadwal_id], references: [id])
  matakuliah_id   String
  matakuliah      MataKuliah  @relation(fields: [matakuliah_id], references: [id])

  created_at DateTime  @default(now()) @db.Timestamptz()
  updated_at DateTime  @updatedAt @db.Timestamptz()
  Absensi    Absensi[]
}

model Jadwal {
  id                    String        @id @default(uuid())
  day_of_week           Int
  start_time_in_seconds Int
  end_time_in_seconds   Int
  created_at            DateTime      @default(now()) @db.Timestamptz()
  updated_at            DateTime      @updatedAt @db.Timestamptz()
  KelasJadwal           KelasJadwal[]
}

model KelasJadwal {
  id                    String                  @id @default(uuid())
  kelas_id              String
  kelas                 Kelas                   @relation(fields: [kelas_id], references: [id])
  jadwal_id             String
  jadwal                Jadwal                  @relation(fields: [jadwal_id], references: [id])
  ruangan_id            String
  ruangan               Ruangan                 @relation(fields: [ruangan_id], references: [id])
  created_at            DateTime                @default(now()) @db.Timestamptz()
  updated_at            DateTime                @updatedAt @db.Timestamptz()
  MataKuliahKelasJadwal MataKuliahKelasJadwal[]
}

model Absensi {
  id                         String                @id @default(uuid())
  jam_masuk                  DateTime?             @db.Timestamptz()
  batas_jam_masuk            DateTime?             @db.Timestamptz()
  matakuliah_kelas_jadwal_id String
  matakuliah_kelas_jadwal    MataKuliahKelasJadwal @relation(fields: [matakuliah_kelas_jadwal_id], references: [id])
  status_absensi             StatusAbsensi         @default(DEFAULT)
  pertemuan_ke               Int
  qr_code_text               String                @unique @default(uuid())
  created_at                 DateTime              @default(now()) @db.Timestamptz()
  updated_at                 DateTime              @updatedAt @db.Timestamptz()
  AbsensiMahasiswa           AbsensiMahasiswa[]
}

enum StatusAbsensi {
  DEFAULT
  BUKA
  TUTUP
}

model AbsensiMahasiswa {
  id                       String                 @id @default(uuid())
  qr_code_text             String                 @unique
  absensi_id               String
  absensi                  Absensi                @relation(fields: [absensi_id], references: [id])
  mahasiswa_id             String
  mahasiswa                Mahasiswa              @relation(fields: [mahasiswa_id], references: [id])
  status_absensi_mahasiswa StatusAbsensiMahasiswa @default(DEFAULT)
  created_at               DateTime               @default(now()) @db.Timestamptz()
  updated_at               DateTime               @updatedAt @db.Timestamptz()
}

enum StatusAbsensiMahasiswa {
  HADIR
  IZIN
  ALPA
  TELAT
  DEFAULT
}

model MataKuliah {
  id              String   @id @default(uuid())
  kode_matakuliah String   @unique
  nama_matakuliah String
  sks             Int
  dosen_id        String?
  dosen           Dosen?   @relation(fields: [dosen_id], references: [id])
  semester_id     String
  semester        Semester @relation(fields: [semester_id], references: [id])
  jurusan_id      String
  jurusan         Jurusan  @relation(fields: [jurusan_id], references: [id])

  created_at            DateTime                @default(now()) @db.Timestamptz()
  updated_at            DateTime                @updatedAt @db.Timestamptz()
  MataKuliahKelasJadwal MataKuliahKelasJadwal[]
}
